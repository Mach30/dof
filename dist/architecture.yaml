elements:
  0-References/1-CreatingA_PackageJsonFile.yaml: &ref_0
    title: Creating a package.json file
    url: 'https://docs.npmjs.com/creating-a-package-json-file'
  0-References/2-AboutSemanticVersioning.yaml: &ref_1
    title: About semantic versioning
    url: 'https://docs.npmjs.com/about-semantic-versioning'
  0-References/3-UsingSpdxLicenseListShortIdentifiers.yaml: &ref_2
    title: Using SPDX License List "short identifiers” in source files
    url: >-
      https://spdx.org/sites/cpstandard/files/pages/files/using_spdx_license_list_short_identifiers.pdf
  1-StakeholderNeeds/1-OSWH_Definition.yaml: &ref_3
    id: 1
    name: OSHW Definition
    statement: >-
      OSHW projects should be developed and shared in accordance to the
      https://www.oshwa.org/definition/[OSHW Definition].
    derivedFrom: []
  1-StakeholderNeeds/2-OSHW_Certification.yaml: &ref_4
    id: 2
    name: OSHW Certification
    statement: >-
      OSHW projects should be developed and shared in accordance to the
      https://certification.oshwa.org/process.html[OSHW Certification process].
    derivedFrom: []
  1-StakeholderNeeds/3-OSHW_IsLikeOSS.yaml: &ref_5
    id: 3
    name: OSHW should be like OSS
    statement: >-
      Open Source Hardware should be like Open Source Software to the greatest
      degree possible (e.g. sharing, development, licensing).
    derivedFrom:
      - 1-StakeholderNeeds/1-OSHW_Definition.yaml
  1-StakeholderNeeds/4-OSHW_SourceDefinition.yaml: &ref_6
    id: 4
    name: OSHW Source Definition
    statement: >-
      The source of an OSHW project is its:  *Bill of Materials Data* (list of
      components and counts covering all parts which must be purchased to build
      the project), *Assembly Instructions* (complete list of instructions to
      build the project from its purchased parts), and *Supporting
      Documentation* (e.g. design files, schematics, operating instructions)
    derivedFrom:
      - 1-StakeholderNeeds/1-OSHW_Definition.yaml
      - 1-StakeholderNeeds/2-OSHW_Definition.yaml
  2-UserStories/1-BranchOSHW.yaml: &ref_7
    id: 1
    name: Branch OSHW
    actor: OSHW Developer
    behavior: use branches in the development of OSHW
    rationale: modify the project source in parallel lines of development
    derivedFrom:
      - 1-StakeholderNeeds/2-OSHW_Certification.yaml
      - 1-StakeholderNeeds/3-OSHW_IsLikeOSS.yaml
    example: >-
      Creating a v1 branch to preserve and maintain v1 source as part of OSHW
      certification compliance.  New development can then happen on trunk or a
      v2 branch.
  2-UserStories/2-ForkOSHW.yaml: &ref_8
    id: 2
    name: Fork OSHW
    actor: OSHW Developer
    behavior: fork OSHW projects
    rationale: modify the project source in my own epository
    derivedFrom:
      - 1-StakeholderNeeds/3-OSHW_IsLikeOSS.yaml
    example: >-
      Forking a project to customize its design for my own purposes (e.g.
      swapping out a controller board, adjusting it to fit me).
  2-UserStories/3-MergeOSHW.yaml: &ref_9
    id: 3
    name: Merge OSHW
    actor: OSHW Developer
    behavior: merge project source
    rationale: integrate changes from a branch or fork into my current source
    derivedFrom:
      - 1-StakeholderNeeds/3-OSHW_IsLikeOSS.yaml
    example: >-
      Incorporating suggested source changes from a contributor who forked the
      project to develop a new feature for the project.
  2-UserStories/4-CompositionOfOSHW.yaml: &ref_10
    id: 4
    name: Composition of OSHW
    actor: OSHW Developer
    behavior: include external projects as elements of my project
    rationale: build upon previous engineering effort (my own or others’)
    derivedFrom:
      - 1-StakeholderNeeds/3-OSHW_IsLikeOSS.yaml
    example: Using an Arduino Uno as the controller board for an OSHW robot project.
  3-DataStructures/1-Component.yaml: &ref_11
    name: Component
    purpose: >-
      Represents the smallest logical element in an OSHW project.  A Component
      may be a project in its own right (with a sub-component hierarchy) or may
      be nested as a sub-component in the "source" of another component.
    template: |
      name: {{name}}
      version: {{version}}
      description: {{description}}
      license: {{license}}
      author: {{author}}
      dependencies: {{dependencies}}
      components: {{components}}
      parts: {{parts}}
      tools: {{tools}}
      precautions: {{precautions}}
    elements:
      - key: name
        type: string
        itemType: ''
        description: >-
          Source representation of the component's name.  Format = single word,
          only lowercase letters, and may contain hyphens and underscores.
        derivedFrom:
          - 0-References/1-CreatingA_PackageJsonFile.yaml
      - key: version
        type: string
        itemType: ''
        description: >-
          Version number of the component's source.  Format = x.x.x per semantic
          versioning guidelines.
        derivedFrom:
          - 0-References/1-CreatingA_PackageJsonFile.yaml
          - 0-References/2-AboutSemanticVersioning.yaml
      - key: description
        type: string
        itemType: ''
        description: >-
          Human readable representation of the component's name.  Typically used
          in rendered documentation referencing the component.
        derivedFrom:
          - 0-References/1-CreatingA_PackageJsonFile.yaml
      - key: license
        type: string
        itemType: ''
        description: >-
          List of licenses used within the component's source.  Format = SPDX
          license expression.
        derivedFrom:
          - 0-References/3-UsingSpdxLicenseListShortIdentifiers.yaml
      - key: author
        type: string
        itemType: ''
        description: >-
          Identifies author (e.g. owner of source intellectual property). 
          Format (email and website are optional)= Author Name <email address>
          (website URL)
        derivedFrom:
          - 0-References/1-CreatingA_PackageJsonFile.yaml
      - key: dependencies
        type: dictionary
        itemType: string
        description: >-
          Per NPM/Yarn.  Key = dependency name.  Value = Semantic versioning
          version string.
        derivedFrom:
          - 0-References/1-CreatingA_PackageJsonFile.yaml
      - key: components
        type: dictionary
        itemType: 3-DataStructures/1-Component.yaml
        description: >-
          Listing of sub-components directly owned by this component.  Key =
          sub-component's name.  Value = sub-component's data structure.
        derivedFrom: []
      - key: parts
        type: dictionary
        itemType: 3-DataStructures/2-ComponentListItem.yaml
        description: >-
          Listing of the component's parts (and substitutions) defined as
          sub-components.  Key = part's id.  Value = part's key data.
        derivedFrom: []
      - key: tools
        type: dictionary
        itemType: 3-DataStructures/2-ComponentListItem.yaml
        description: >-
          Listing of the required tools (and substitutions) defined as
          sub-components.  Key = tool's id.  Value = tool's key data.
        derivedFrom: []
      - key: precautions
        type: list
        itemType: string
        description: >-
          Listing of caution statements (e.g. safety warnings) for the
          component.
        derivedFrom: []
    derivedFrom: []
  3-DataStructures/2-ComponentListItem.yaml: &ref_12
    name: Component List Item
    purpose: >-
      Identifies a part or tool used in the fabrication of the component.  Parts
      and tools are defined by their source material in the components list.
    template: |
      id: {{id}}
      description: {{description}}
      descriptionLong: {{descriptionLong}}
      descriptionSelected: {{descriptionSelected}}
      quantity: {{quantity}}
      quantityUnits: {{quantityUnits}}
      options: {{options}}
      selectedOption: {{selectedOption}}
      notes: {{notes}}
    elements:
      - key: id
        type: string
        itemType: ''
        description: >-
          Part's ID (or part number).  Format = single word, only lowercase
          letters, and may contain hyphens and underscores.
        derivedFrom: []
      - key: description
        type: string
        itemType: ''
        description: >-
          Human readable name for the part (not name of the selected component
          for this part).
        derivedFrom: []
      - key: descriptionLong
        type: string
        itemType: ''
        description: >-
          Computed value = "{{id}}:\ {{description}}".  Used as shortcut in
          documentation.
        derivedFrom: []
      - key: descriptionSelected
        type: string
        itemType: ''
        description: >-
          Computed value = "{{id}}:\ {{description}}
          ({{selectedOption.description}} v{{selectedOption.version}})"
        derivedFrom: []
      - key: quantity
        type: number
        itemType: ''
        description: >-
          Defines how much of the item is required (whole number or real number
          depending on item)
        derivedFrom: []
      - key: quantityUnits
        type: string
        itemType: ''
        description: >-
          Unit of measure for the specified quantity.  When specifiying units
          for whole components use "part".
        derivedFrom: []
      - key: options
        type: list
        itemType: string
        description: >-
          List of component names defining available substitutions for the part
          or tool.
        derivedFrom: []
      - key: selectedOption
        type: integer
        itemType: ''
        description: Specifies the selected option from the list of component options.
        derivedFrom: []
      - key: notes
        type: string
        itemType: ''
        description: Developer comments on this part or tool.
        derivedFrom: []
    derivedFrom: []
package:
  name: dof
  version: 0.1.5
  description: Distributed OSHW Framework (DOF)
  keywords:
    - oshw
  repository: 'https://github.com/Mach30/dof.git'
  homepage: 'http://dof.sliderule.io'
  author: J. Simmons <jrs@mach30.org>
  license: CC-BY-4.0
  dependencies:
    js-yaml: ^3.12.0
    liquidjs: ^6.1.1
    minimist: ^1.2.0
generationDate: 2/26/2019
0-References:
  - *ref_0
  - *ref_1
  - *ref_2
1-StakeholderNeeds:
  - *ref_3
  - *ref_4
  - *ref_5
  - *ref_6
2-UserStories:
  - *ref_7
  - *ref_8
  - *ref_9
  - *ref_10
3-DataStructures:
  - *ref_11
  - *ref_12
